{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["const date_page = document.querySelector('.date_page');\n\nconst url = \"http://192.168.1.117:9000/\"; \n// const url = \"http://georoute.asuscomm.com:5555/\"; \nconst status_EP = \"get_status\";\nconst mode_EP = \"get_mode\";\nconst warnings_EP = \"get_warnings\"; \nconst percentage_EP = \"get_calculated_battery_charge\"\n\nconst modeUrl = `${url}${mode_EP}`;\nconst statusUrl = `${url}${status_EP}`;\nconst warningsUrl = `${url}${warnings_EP}`;\nconst percentageUrl = `${url}${percentage_EP}`; \nlet view_mode =\"\";\nlet view_status = \"\";\nlet view_percentage;\n\nmode();\nstatusEP();\npercentage();\n// console.log(view_mode);\n// console.log(view_status);\n// date_page.innerHTML = view_mode + view_status;\ndate_page.innerHTML = view_mode + view_status + view_percentage;\n\nconst setUserTimerId = setInterval(() => {\n  mode();\n  statusEP();\n    percentage();\n  date_page.innerHTML = view_mode + view_status + view_percentage\n}, 60000);\n\n// const setUserTimerIdBat = setInterval(() => {\n//   percentage();\n// //   console.log(view_mode);\n// // console.log(view_status);\n// date_page.innerHTML = view_mode + view_status + view_percentage\n// }, 60000);\n\n  async function mode() {\n    await fetch(modeUrl)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        view_mode = markup_mode(data);\n        // date_page.innerHTML = markup_mode(data);\n      })\n      .catch(error => {\n        console.error('Fetch error:', error);\n      });\n  };\n\n  async function statusEP() {\n   await fetch(statusUrl)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n          view_status = markup_status(data);\n        // date_page.insertAdjacentHTML(\"beforeend\", markup_status(data))\n        // date_page.innerHTML = markup_mode(data) + markup_status(data);\n        date_page.innerHTML = view_mode + view_status;\n      })\n      .catch(error => {\n        console.error('Fetch error:', error);\n      });\n  };\n  \nasync function percentage() {\n    await fetch(percentageUrl)\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        view_percentage = markup_percentage(data);\n        // date_page.innerHTML = markup_mode(data);\n        // date_page.innerHTML = markup_mode(data) + markup_status(data) + markup_percentage(data);\n        date_page.innerHTML = view_mode + view_status + view_percentage;\n        // date_page.insertAdjacentHTML(\"beforeend\", markup_percentage(data))\n      })\n      .catch(error => {\n        console.error('Fetch error:', error);\n      });\n  };\n\nfunction markup_mode (data) {\n  if (data[\"mode\"]===\"Line Mode\") {\n  return (`<div class=\"mode_EP main\">\n     <p class=\"param_title net\">Живлення від мережі </p> </div>`)}\n  else { return (`<div class=\"mode_EP main\"><p class=\"param_title bat\">Живлення від батарей</p></div>`)};\n};\n\nfunction markup_status (data) {\n  return (`<div class=\"all_param\">\n     <ul class=\"param_box\">\n     <li class=\"param_item\">\n     <p class=\"param_title\">Вхідна напруга, В</p>\n     <p class=\"param_data\">${data['ac_grid_voltage']}</p> \n     </li>\n\n     <li class=\"param_item\">\n     <p class=\"param_title\">Вхідна частота, Hz</p>\n     <p class=\"param_data\">${data['ac_grid_frequency']}</p> \n     </li>\n \n     <li class=\"param_item\">\n     <p class=\"param_title\">Ємність батарей, %</p>\n     <p class=\"param_data\">${data['battery_capacity']}</p> \n     </li>\n\n     <li class=\"param_item\">\n     <p class=\"param_title\">Струм заряду батарей, А</p>\n     <p class=\"param_data\">${data['battery_charging_current']}</p> \n     </li>\n\n     <li class=\"param_item\">\n     <p class=\"param_title\">Струм розряду батарей, А</p>\n     <p class=\"param_data\">${data['battery_discharge_current']}</p> \n     </li>\n\n     <li class=\"param_item\">\n     <p class=\"param_title\">Вольтаж батарей, В</p>\n     <p class=\"param_data\">${data['battery_voltage']}</p> \n     </li>\n\n     <li class=\"param_item\">\n     <p class=\"param_title\">Температура інвертору, град.С</p>\n     <p class=\"param_data\">${data['inverter_heat_sink_temperature']}</p> \n     </li>\n     </ul>\n     \n\n     <ul class=\"param_box\">\n     <li class=\"param_item\">\n     <p class=\"param_title\">Вихідна напруга, В </p>\n     <p class=\"param_data\">${data['ac_output_voltage']} </p> \n     </li>\n\n    <li class=\"param_item\">\n     <p class=\"param_title\">Вихідна частота, Hz</p>\n     <p class=\"param_data\">${data['ac_output_frequency']} </p> \n     </li>\n \n    <li class=\"param_item\">\n     <p class=\"param_title\"> Навантаження інвертору, %</p>\n     <p class=\"param_data\"> ${data['ac_output_load_percent']} </p> \n     </li>\n    <li class=\"param_item\">\n     <p class=\"param_title\">Споживана від інвертору потужність, Вт</p>\n     <p class=\"param_data\">${data['ac_output_active_power']}</p> \n     </li>\n    <li class=\"param_item\">\n     <p class=\"param_title\">Споживана від інвертору потужність, ВА</p>\n     <p class=\"param_data\">${data['ac_output_apparent_power']}</p> \n     </li>\n     <li class=\"param_item\">\n     <p class=\"param_title\"> Чи заряджаються батареї?</p>\n     <p class=\"param_data\"> ${data['is_ac_charging_on']}</p> \n     </li>\n     </ul>\n     </div>\n     `)\n};\n\nfunction markup_percentage (data) {\n    return (`<div class=\"bat_percent\">\n     <p class=\"param_title\"> Поточний заряд батареї</p>\n     <p class=\"param_data\"> ${data['charge_percent']}</p> \n       </div>\n     `)\n    };"],"names":["date_page","url","status_EP","mode_EP","percentage_EP","modeUrl","statusUrl","percentageUrl","view_mode","view_status","view_percentage","mode","statusEP","percentage","response","data","markup_mode","error","markup_status","markup_percentage"],"mappings":"ssBAAA,MAAMA,EAAY,SAAS,cAAc,YAAY,EAE/CC,EAAM,6BAENC,EAAY,aACZC,EAAU,WAEVC,EAAgB,gCAEhBC,EAAU,GAAGJ,CAAG,GAAGE,CAAO,GAC1BG,EAAY,GAAGL,CAAG,GAAGC,CAAS,GAE9BK,EAAgB,GAAGN,CAAG,GAAGG,CAAa,GAC5C,IAAII,EAAW,GACXC,EAAc,GACdC,EAEJC,IACAC,IACAC,IAIAb,EAAU,UAAYQ,EAAYC,EAAcC,EAEzB,YAAY,IAAM,CACvCC,IACAC,IACEC,IACFb,EAAU,UAAYQ,EAAYC,EAAcC,CAClD,EAAG,GAAK,EASN,eAAeC,GAAO,CACpB,MAAM,MAAMN,CAAO,EAChB,KAAKS,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,6BAA6B,EAE/C,OAAOA,EAAS,MACxB,CAAO,EACA,KAAKC,GAAQ,CACZP,EAAYQ,EAAYD,CAAI,CAEpC,CAAO,EACA,MAAME,GAAS,CACd,QAAQ,MAAM,eAAgBA,CAAK,CAC3C,CAAO,CAEP,CACE,eAAeL,GAAW,CACzB,MAAM,MAAMN,CAAS,EACjB,KAAKQ,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,6BAA6B,EAE/C,OAAOA,EAAS,MACxB,CAAO,EACA,KAAKC,GAAQ,CACVN,EAAcS,EAAcH,CAAI,EAGlCf,EAAU,UAAYQ,EAAYC,CAC1C,CAAO,EACA,MAAMQ,GAAS,CACd,QAAQ,MAAM,eAAgBA,CAAK,CAC3C,CAAO,CAEP,CACA,eAAeJ,GAAa,CACxB,MAAM,MAAMN,CAAa,EACtB,KAAKO,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,6BAA6B,EAE/C,OAAOA,EAAS,MACxB,CAAO,EACA,KAAKC,GAAQ,CACZL,EAAkBS,EAAkBJ,CAAI,EAGxCf,EAAU,UAAYQ,EAAYC,EAAcC,CAExD,CAAO,EACA,MAAMO,GAAS,CACd,QAAQ,MAAM,eAAgBA,CAAK,CAC3C,CAAO,CAEP,CACA,SAASD,EAAaD,EAAM,CAC1B,OAAIA,EAAK,OAAU,YACX;AAAA,iEAEO,qFACjB,CAEA,SAASG,EAAeH,EAAM,CAC5B,MAAQ;AAAA;AAAA;AAAA;AAAA,6BAImBA,EAAK,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKvBA,EAAK,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKzBA,EAAK,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKxBA,EAAK,wBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKhCA,EAAK,yBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKjCA,EAAK,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKvBA,EAAK,8BAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAQtCA,EAAK,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,6BAKzBA,EAAK,mBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA,8BAK1BA,EAAK,sBAAyB;AAAA;AAAA;AAAA;AAAA,6BAI/BA,EAAK,sBAAyB;AAAA;AAAA;AAAA;AAAA,6BAI9BA,EAAK,wBAA2B;AAAA;AAAA;AAAA;AAAA,8BAI/BA,EAAK,iBAAoB;AAAA;AAAA;AAAA;AAAA,MAKvD,CAEA,SAASI,EAAmBJ,EAAM,CAC9B,MAAQ;AAAA;AAAA,8BAEkBA,EAAK,cAAiB;AAAA;AAAA,MAGpD"}